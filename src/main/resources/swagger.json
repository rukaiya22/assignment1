{
  "openapi": "3.0.0",
  "info": {
    "title": "Example API",
    "version": "1.0",
    "description": "A simple API documented manually with Swagger JSON."
  },
  "paths": {
    "/api/users": {
      "get": {
        "tags": [
          "User API"
        ],
        "summary": "Get all users of the application",
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users",
                  "type": "array"
                }
              }
            }
          },
          "400": {
            "description": "No data found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "User API"
        ],
        "summary": "Add post body to save User",
        "description": "Sending post body to save User",
        "requestBody": {
          "description": "Sending an User name and email",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "User is created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User API"
        ],
        "summary": "Update an existing User",
        "description": "Sending put body to update the User",
        "requestBody": {
          "description": "Sending updated User name and email",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "User is updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/email/{email}": {
      "get": {
        "tags": [
          "User API"
        ],
        "summary": "Get a users of the application",
        "parameters": [
          {
            "in": "path",
            "name": "email",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The email of the user"
          }
        ],
        "responses": {
          "200": {
            "description": "A single user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "No data found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "tags": [
          "User API"
        ],
        "summary": "Get a users of the application",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the user"
          }
        ],
        "responses": {
          "200": {
            "description": "A single user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "No data found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User API"
        ],
        "summary": "Delete user and corresponding trackers by ID",
        "description": "Deletes a user object and all related tracker objects based on the provided user ID.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the user and related trackers to delete."
          }
        ],
        "responses": {
          "200": {
            "description": "User and related Trackers deleted successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/trackers/{userId}": {
      "get": {
        "tags": [
          "Tracker API"
        ],
        "summary": "Get all health record trackings of a user of the application",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the user to fetch trackers."
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieve all Trakers of a user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trackers"
                }
              }
            }
          },
          "400": {
            "description": "No data found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/trackers/": {
      "post": {
        "tags": [
          "Tracker API"
        ],
        "summary": "Add a new tracker",
        "description": "Sending post body to create a Tracker",
        "requestBody": {
          "description": "Sending calories walkingHours drinking to create Tracker",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tracker"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Tracker is created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tracker"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tracker API"
        ],
        "summary": "Update an existing tracker",
        "description": "Sending post body to update an existing Tracker",
        "requestBody": {
          "description": "Sending updated calories walkingHours drinking of a Tracker",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tracker"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Tracker is updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tracker"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/trackers/{trackerId}": {
      "delete": {
        "tags": [
          "Tracker API"
        ],
        "summary": "Delete a single Tracker by ID",
        "description": "Deletes a a single Tracker object based on the provided ID.",
        "parameters": [
          {
            "in": "path",
            "name": "trackerId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the tracker to delete."
          }
        ],
        "responses": {
          "200": {
            "description": "Tracker deleted successfully"
          },
          "404": {
            "description": "Tracker not found"
          }
        }
      }
    }

  },
  "components": {
    "schemas": {
      "User": {

          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "example": 1
            },
            "name": {
              "type": "string",
              "example": "Rukaiya"
            },
            "email": {
              "type": "string",
              "example": "rukaiya@gmail.com"
            }
          }
      },
      "Users": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "example": 1
            },
            "name": {
              "type": "string",
              "example": "Rukaiya"
            },
            "email": {
              "type": "string",
              "example": "rukaiya@gmail.com"
            }
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error message": {
            "type": "string",
            "example": "Invalid input"
          },
          "error in user creation": {
            "type": "string",
            "example": "Duplicate email"
          }
        }
      },
      "Tracker": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "userId": {
            "type": "integer",
            "example": 1
          },
          "calories": {
            "type": "number",
            "example": 200.53
          },
          "drinking": {
            "type": "number",
            "example": 200.53
          },
          "walkingHours": {
            "type": "number",
            "example": 200.53
          }
        }
      },
      "Trackers": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "example": 1
            },
            "userId": {
              "type": "integer",
              "example": 1
            },
            "calories": {
              "type": "number",
              "example": 200.53
            },
            "drinking": {
              "type": "number",
              "example": 200.53
            },
            "walkingHours": {
              "type": "number",
              "example": 200.53
            }
          }
        }
      }
    }
  }
}